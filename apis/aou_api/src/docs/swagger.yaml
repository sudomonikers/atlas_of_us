definitions:
  auth.LoginRequest:
    properties:
      password:
        description: |-
          Password for login
          Example: password123
        type: string
      username:
        description: |-
          Username for login
          Example: testuser
        type: string
    required:
    - password
    - username
    type: object
  auth.SignUpRequest:
    properties:
      email:
        description: |-
          Email address for registration
          Example: test@example.com
        type: string
      password:
        description: |-
          Password for registration
          Example: password123
        type: string
      phone:
        description: |-
          Phone number for registration
          Example: 123-456-7890
        type: string
      username:
        description: |-
          Username for registration
          Example: testuser
        type: string
    required:
    - email
    - password
    - phone
    - username
    type: object
  handlers.CreateNodeRequest:
    properties:
      labels:
        description: |-
          Labels is an array of labels to assign to the new node
          Example: ["L1", "Pursuit"]
        items:
          type: string
        type: array
      properties:
        additionalProperties: {}
        description: |-
          Properties is a map of property key-value pairs for the new node
          Example: {"name": "Cross Country Skiing", "description": "The activity of cross-country skiing, a form of skiing where skiers move over relatively flat terrain."}
        type: object
    required:
    - labels
    - properties
    type: object
  handlers.CreateRelationshipRequest:
    properties:
      properties:
        additionalProperties: {}
        description: |-
          Properties is an optional map of property key-value pairs for the relationship
          Example: {"fromDate": "2023-01-15", "strength": 0.85}
        type: object
      sourceId:
        description: |-
          SourceId is the element ID of the source node
          Example: "4:7f3adc9f-8a7b-48e6-9c5d-12e34f56a7b8:0"
        type: string
      targetId:
        description: |-
          TargetId is the element ID of the target node
          Example: "4:9a8b7c6d-5e4f-3a2b-1c0d-12e34f56a7b8:0"
        type: string
      type:
        description: |-
          Type is the relationship type to create
          Example: "RELATES_TO"
        type: string
    required:
    - sourceId
    - targetId
    - type
    type: object
  handlers.FindSimilarNodesRequest:
    properties:
      embedding:
        description: |-
          Embedding is the vector embedding to use for similarity search
          Example: [0.1, 0.23, -0.45, 0.67, ...]
        items:
          type: number
        type: array
      limit:
        description: Limit is the maximum number of similar nodes to return (optional,
          defaults to 5)
        type: integer
      nodeId:
        description: |-
          NodeId is the element ID of the node to find similar nodes for
          Example: "4:9a8b7c6d-5e4f-3a2b-1c0d-12e34f56a7b8:0"
        type: string
    type: object
  handlers.UpdateNodeRequest:
    properties:
      labels:
        description: |-
          Labels is an array of labels to set on the node
          Example: ["L1", "Pursuit"]
        items:
          type: string
        type: array
      properties:
        additionalProperties: {}
        description: |-
          Properties is a map of property key-value pairs to update on the node
          Example: {"name": "Cross Country Skiing", "description": "The activity of cross-country skiing, a form of skiing where skiers move over relatively flat terrain."}
        type: object
      targetId:
        description: |-
          TargetId is the element ID of the target node
          Example: "4:9a8b7c6d-5e4f-3a2b-1c0d-12e34f56a7b8:0"
        type: string
    required:
    - targetId
    type: object
  handlers.UpdateRelationshipRequest:
    properties:
      properties:
        additionalProperties: {}
        description: |-
          Properties is an optional map of property key-value pairs for the relationship
          Example: {"fromDate": "2023-01-15", "strength": 0.85}
        type: object
      targetId:
        description: |-
          TargetId is the element ID of the target relationship
          Example: "5:9a8b7c6d-5e4f-3a2b-1c0d-12e34f56a7b8:0"
        type: string
      type:
        description: |-
          Type is the relationship type to update
          Example: "RELATES_TO"
        type: string
    required:
    - targetId
    - type
    type: object
info:
  contact: {}
paths:
  /:
    get:
      description: Returns a simple health status.
      operationId: healthcheck
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates user credentials and returns a JWT token upon successful
        login.
      operationId: login
      parameters:
      - description: User login credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Invalid username or password
          schema:
            additionalProperties: true
            type: object
        "406":
          description: Username and password combo not found!
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
  /secure/graph/create-node:
    post:
      consumes:
      - application/json
      description: Creates a new node with the given labels and properties.
      operationId: create-node
      parameters:
      - description: Request body for creating a node
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateNodeRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successful operation
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
  /secure/graph/create-relationship:
    post:
      consumes:
      - application/json
      description: Creates a new relationship of the given type between two nodes
        identified by their element IDs.
      operationId: create-relationship
      parameters:
      - description: Request body for creating a relationship
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateRelationshipRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Successful operation
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
  /secure/graph/get-node-with-relationships-by-id:
    get:
      description: Get a node from the graph by id and also retrieves its relationships
      operationId: get-node-with-relationships-by-id
      parameters:
      - description: Node element ID
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
  /secure/graph/get-nodes:
    get:
      description: Retrieves nodes based on labels and properties.
      operationId: get-nodes
      parameters:
      - description: Comma-separated list of labels
        in: query
        name: labels
        type: string
      - description: URL encoded comma-separated list of property key-value pairs
        in: query
        name: properties
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
  /secure/graph/similar-nodes:
    post:
      consumes:
      - application/json
      description: Finds nodes similar to a node specified by its element ID or by
        a vector embedding.
      operationId: find-similar-nodes
      parameters:
      - description: Request body for finding similar nodes
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.FindSimilarNodesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
  /secure/graph/update-node:
    put:
      consumes:
      - application/json
      description: Updates the labels and/or properties of an existing node identified
        by its element ID.
      operationId: update-node
      parameters:
      - description: Request body for updating a node
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateNodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
  /secure/graph/update-relationship:
    put:
      consumes:
      - application/json
      description: Updates the properties of an existing relationship identified by
        its element ID.  If the relationship type is provided, the existing relationship
        is deleted and a new one is created with the new type.
      operationId: update-relationship
      parameters:
      - description: Request body for updating a relationship
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateRelationshipRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successful operation
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid request body
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
  /secure/helper/s3-object:
    get:
      description: Retrieves an object from S3 given a bucket and key.
      operationId: get-s3-object
      parameters:
      - description: S3 Bucket
        in: query
        name: bucket
        required: true
        type: string
      - description: S3 Key
        in: query
        name: key
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Successful operation
          schema:
            type: string
        "400":
          description: Invalid query parameters
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
  /sign-up:
    post:
      consumes:
      - application/json
      description: Creates a new user account and returns a JWT token upon successful
        registration.
      operationId: sign-up
      parameters:
      - description: User registration details
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            type: string
        "400":
          description: Invalid request
          schema:
            additionalProperties: true
            type: object
        "406":
          description: Username or phone number already exists!
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
swagger: "2.0"
